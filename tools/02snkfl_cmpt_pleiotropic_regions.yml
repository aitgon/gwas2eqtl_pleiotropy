coloc_tsv_gz = config['coloc_tsv_gz']
#david_email = config['david_email']
etissue_cat_ods = config['etissue_cat_ods']
outdir = config['outdir']
#public_data_dir_path = config['public_data_dir']
upper_var_gwas_cat_count = config['upper_var_gwas_cat_count']
url_db = config['url_db']


rule all_02snkfl_cmpt_pleiotropic_regions:
    input:
        os.path.join(outdir, "cmpt_pleiotropic_regions.py/region_window_100000.tsv"),

rule cmpt_pleiotropic_regions:
    input:
        gwas=os.path.join(outdir, "cmpt_count_per_rsid.py/count_per_rsid_gwas.tsv"),
    output:
        os.path.join(outdir, "cmpt_pleiotropic_regions.py/region_window_100000.tsv"),
        os.path.join(outdir, "cmpt_pleiotropic_regions.py/regions_100000_length_hist.png"),
        os.path.join(outdir, "cmpt_pleiotropic_regions.py/region_window_100000.bed"),
    shell:
        "python scripts/cmpt_pleiotropic_regions.py {input.gwas} {output[0]} {output[1]}"

rule count_per_rsid:
    input:
        os.path.join(outdir, "filter_h4.py/h4.tsv.gz"),
    output:
        os.path.join(outdir, "cmpt_count_per_rsid.py/count_per_rsid_gwas.tsv"),
        os.path.join(outdir, "cmpt_count_per_rsid.py/count_per_rsid_egene.tsv"),
        os.path.join(outdir, "cmpt_count_per_rsid.py/count_per_rsid_etissue.tsv"),
        os.path.join(outdir, "cmpt_count_per_rsid.py/variant_pleio_1_flank_0_hg38.bed"),
        os.path.join(outdir, "cmpt_count_per_rsid.py/variant_pleio_1_flank_50_hg38.bed"),
        os.path.join(outdir, "cmpt_count_per_rsid.py/count_per_rsid_gwas_egene_etissue.tsv"),
    params:
        upper_var_gwas_cat_count=upper_var_gwas_cat_count
    shell:
        "python scripts/cmpt_count_per_rsid.py {input[0]} {params.upper_var_gwas_cat_count} {output[0]}"

rule filter_h4:
    input:
        etissue_cat_ods,
        os.path.join(outdir, "db/db_annotated.txt"),
    output:
        os.path.join(outdir, "filter_h4.py/h4.tsv.gz"),
    params:
        url_db,
    shell:
        "python scripts/filter_h4.py {params[0]} {input[0]} {output[0]}"

rule annotate:
    input:
        os.path.join(outdir, "db/db_imported.txt"),
        os.path.join(outdir, "annot_gwas_metadata.py/gwas_metadata.ods"),
        etissue_cat_ods,
    output:
        os.path.join(outdir, "db/db_annotated.txt"),
    params:
        url_db,
    resources: db=1
    shell:
        """python scripts/annotate_db.py {params[0]} {input[1]} {input[2]} {output[0]}
        touch {output[0]}"""

rule import_sqlite:
    input:
        coloc_tsv_gz,
    output:
        os.path.join(outdir, "db/db_imported.txt"),
    params:
        url_db.replace('sqlite:///', ''),
    resources: db=1
    shell:
        """
        rm -f {params[0]}
        gunzip -c {input[0]} |sqlite3 -csv -separator $'\t' {params[0]} '.import --skip 0 /dev/stdin colocimport'
        touch {output[0]}
        """
