coloc_tsv_gz = config['coloc_tsv_gz']
david_email = config['david_email']
etissue_cat_ods = config['etissue_cat_ods']
gwas_cat_ods = config['gwas_cat_ods']
outdir = config['outdir']
public_data_dir_path = config['public_data_dir']
upper_var_gwas_cat_count = config['upper_var_gwas_cat_count']
url_db = config['url_db']

"""export OUTDIR="out/gwas420/pval_5e-08/r2_0.1/kb_1000/window_1000000"; time snakemake --cores 3 -p -s tools/snkfl_all2.yml --config upper_var_gwas_cat_count=5 url_db=sqlite:///"${OUTDIR}"/db/db.sqlite coloc_tsv_gz=../gwas2eqtl/out/concat/coloc_gwas420_pval_5e-08_r2_0.1_kb_1000_window_1000000.tsv.gz outdir="${OUTDIR}" gwas_cat_ods=config/gwas420.ods etissue_cat_ods=config/etissue_category.ods --resources db=1"""

rule all:
    input:
        os.path.join(outdir, "cmpt_count_per_rsid.py/count_per_rsid_gwas.tsv"),
        os.path.join(outdir, "cmpt_pleiotropic_regions.py/region_window_100000.tsv"),
        os.path.join(outdir, "cmpt_pleiotropic_regions.py/regions_100000_length_hist.png"),
        os.path.join(outdir, "intrsct_remap_nr_gwas_categories.py/remap_nr_variant_pleio_1_flank_0_hg38.bed"),
        os.path.join(outdir, "intrsct_remap_nr_gwas_categories.py/remap_nr_variant_pleio_1_flank_50_hg38.bed"),
        # os.path.join(outdir, "pltbox_x_per_rsid_y_remaptf.py/bxplt_remaptf_per_rsid_flank_0.png"),
        # os.path.join(outdir, "pltbox_x_per_rsid_y_remaptf.py/bxplt_remaptf_per_rsid_flank_50.png"),
        os.path.join(outdir, "pltsctr_x_per_rsid_y_egene.py/log.txt"),
        os.path.join(outdir, "pltsctr_x_per_rsid_y_etissue.py/log.txt"),
        os.path.join(outdir, "pltsctr_x_per_rsid_y_gwas.py/log.txt"),
        os.path.join(outdir, "pltbar_vep_consequence.py/missense_variant.png"),
        os.path.join(outdir, "pltbar_x_per_gwas_cat_y_beta.py/eqtl_beta.png"),
        os.path.join(outdir, "pltbar_x_per_gwas_cat_y_beta.py/gwas_beta.png"),
        os.path.join(outdir, "plt_violin_x_per_egene_y_interactors.py/vlnplt.png"),
        os.path.join(outdir, "pltbar_x_per_variant_etissue_y_egene.py/plt.png"),
        os.path.join(outdir, "pltbar_x_per_variant_egene_y_etissue.py/plt.png"),
        os.path.join(outdir, "pltbar_x_per_variant_egene_etissue_y_gwas.py/plt.png"),
        os.path.join(outdir, "pltbar_x_per_gwas_cat_y_logpval.py/eqtl.png"),
        os.path.join(outdir, "pltbar_x_per_gwas_cat_y_logpval.py/gwas.png"),
        os.path.join(outdir, "plthst_gwas_egene_etissue.py/hist_egene.png"),
        os.path.join(outdir, "plthst_gwas_egene_etissue.py/hist_etissue.png"),
        os.path.join(outdir, "plthst_gwas_egene_etissue.py/hist_gwas.png"),
        # os.path.join(outdir, "pltvln_egene_etissue_freq_per_gwas_cat.py/violinplot_gwas_etissue.png"),
        # os.path.join(outdir, "cmpt_davidgo.py/david_pleio_2.tsv"),
        os.path.join(outdir, "pltbar_remap_crm_gwas_categories.py/remap_crm_fisher.png"),
        os.path.join(outdir, "pltbar_tissue_enrich_in_pleio.py/fisher.tsv"),
        os.path.join(outdir, "pltbar_pleiotropic_regions_cumsum.py/pltbar_regions_cumsum.png"),

#os.path.join(outdir, "plt_violin_x_per_region_y_egenes.py/vlnplt.png"),
# os.path.join(outdir, "pltvln_egene_etissue_freq_per_gwas_cat.py/violinplot_gwas_egene.png"),
# os.path.join(outdir, "annot_gwas_metadata.py/gwas413_metadata.tsv"),
# os.path.join(outdir, "pltbar_davidgo.py/david_pleio_2.png"),
#        os.path.join(outdir, "create_table_web.py/web.tsv.gz"),
#        os.path.join(outdir, "ms_supp_tab/supplementary_table.xlsx"),
#        os.path.join(outdir, "ms_supp_tab/ST3_gwas2eqtl_h4.xlsx"),
#        os.path.join(outdir, "cmpt_explained_loci.py/list.tsv"),
#        os.path.join(outdir, "cmpt_explained_loci.py/aggregated.tsv"),

include: 'snkfl_plots2.yml'

#rule create_table_supplementary:
#    input:
#        "config/etissue_category.ods",
#        os.path.join(outdir, "annot_gwas_metadata.py/gwas413_metadata.tsv"),
#        os.path.join(outdir, "cmpt_count_per_rsid.py/count_per_rsid_gwas.tsv"),
#        os.path.join(outdir, "cmpt_count_per_rsid.py/count_per_rsid_egene.tsv"),
#        os.path.join(outdir, "cmpt_count_per_rsid.py/count_per_rsid_etissue.tsv"),
#        os.path.join(outdir, "cmpt_pleiotropic_regions.py/region_window_100000.tsv"),
#        os.path.join(outdir, "filter_h4.py/h4.tsv"),
#        os.path.join(outdir, "cmpt_explained_loci.py/aggregated.tsv"),
#    output:
#        os.path.join(outdir, "ms_supp_tab/supplementary_table.xlsx"),
#        os.path.join(outdir, "ms_supp_tab/ST3_gwas2eqtl_h4.xlsx"),
#    params:
#        indir=outdir,
#    shell:
#        "python scripts/create_table_supplementary.py {params.indir} out/gwas413/genome/5e-08/1000000/ms_supp_tab/supplementary_table.xlsx"

rule intrsct_remap_nr_gwas_categories:
    input:
        os.path.join(outdir, "cmpt_count_per_rsid.py/count_per_rsid_gwas.tsv"),
        os.path.join(outdir, "cmpt_count_per_rsid.py/variant_pleio_1_flank_0_hg38.bed"),
        os.path.join(outdir, "cmpt_count_per_rsid.py/variant_pleio_1_flank_50_hg38.bed"),
        os.path.join(public_data_dir_path, "remap.univ-amu.fr/storage/remap2022/hg38/MACS2/remap2022_nr_macs2_hg38_v1_0.bed.gz"),
    output:
        os.path.join(outdir, "intrsct_remap_nr_gwas_categories.py/remap_nr_variant_pleio_1_flank_0_hg38.bed"),
        os.path.join(outdir, "intrsct_remap_nr_gwas_categories.py/remap_nr_variant_pleio_1_flank_50_hg38.bed"),
    params:
        upper_var_gwas_cat_count=upper_var_gwas_cat_count
    shell:
        "python scripts/intrsct_remap_nr_gwas_categories.py {input[0]} {input[1]} {input[2]} {params.upper_var_gwas_cat_count} {output[0]} {output[1]}"

rule cmpt_vep_consequence_fisher:
    input:
        os.path.join(outdir, "cmpt_vep.py/vep_input.tsv"),
        os.path.join(outdir, "cmpt_vep.py/vep_output.tsv"),
    output:
        os.path.join(outdir, "cmpt_vep_consequence_fisher.py/cons_stat.tsv"),
    params:
        upper_var_gwas_cat_count=upper_var_gwas_cat_count
    shell:
        "python scripts/cmpt_vep_consequence_fisher.py {input[0]} {input[1]} {params.upper_var_gwas_cat_count} {output[0]}"

rule cmpt_vep:
    input:
        os.path.join(outdir, "filter_h4.py/h4.tsv"),
        os.path.join(outdir, "cmpt_count_per_rsid.py/count_per_rsid_gwas.tsv"),
    output:
        os.path.join(outdir, "cmpt_vep.py/vep_input.tsv"),
        os.path.join(outdir, "cmpt_vep.py/vep_output.tsv"),
    params:
        upper_var_gwas_cat_count=upper_var_gwas_cat_count
    shell:
        "python scripts/cmpt_vep.py {input[0]} {input[1]} {params.upper_var_gwas_cat_count} {output[0]} {output[1]}"

rule cmpt_pleiotropic_regions:
    input:
        gwas=os.path.join(outdir, "cmpt_count_per_rsid.py/count_per_rsid_gwas.tsv"),
    output:
        os.path.join(outdir, "cmpt_pleiotropic_regions.py/region_window_100000.tsv"),
        os.path.join(outdir, "cmpt_pleiotropic_regions.py/regions_100000_length_hist.png"),
        os.path.join(outdir, "cmpt_pleiotropic_regions.py/region_window_100000.bed"),
    shell:
        "python scripts/cmpt_pleiotropic_regions.py {input.gwas} {output[0]} {output[1]}"

rule count_per_rsid:
    input:
        os.path.join(outdir, "filter_h4.py/h4.tsv"),
    output:
        os.path.join(outdir, "cmpt_count_per_rsid.py/count_per_rsid_gwas.tsv"),
        os.path.join(outdir, "cmpt_count_per_rsid.py/count_per_rsid_egene.tsv"),
        os.path.join(outdir, "cmpt_count_per_rsid.py/count_per_rsid_etissue.tsv"),
        os.path.join(outdir, "cmpt_count_per_rsid.py/variant_pleio_1_flank_0_hg38.bed"),
        os.path.join(outdir, "cmpt_count_per_rsid.py/variant_pleio_1_flank_50_hg38.bed"),
        os.path.join(outdir, "cmpt_count_per_rsid.py/count_per_rsid_gwas_egene_etissue.tsv"),
    params:
        upper_var_gwas_cat_count=upper_var_gwas_cat_count
    shell:
        "python scripts/cmpt_count_per_rsid.py {input[0]} {params.upper_var_gwas_cat_count} {output[0]}"

rule filter_h4:
    input:
        etissue_cat_ods,
        os.path.join(outdir, "db/db_annotated.txt"),
    output:
        os.path.join(outdir, "filter_h4.py/h4.tsv"),
    params:
        url_db,
    shell:
        "python scripts2/filter_h4_2.py {params[0]} {input[0]} {output[0]}"

rule annotate:
    input:
        os.path.join(outdir, "db/db_imported.txt"),
        gwas_cat_ods,
        etissue_cat_ods,
    output:
        os.path.join(outdir, "db/db_annotated.txt"),
    params:
        url_db,
    resources: db=1
    shell:
        """python scripts2/annotate2.py {params[0]} {input[1]} {input[2]} {output[0]}
        touch {output[0]}"""

rule import_sqlite:
    input:
        coloc_tsv_gz,
    output:
        os.path.join(outdir, "db/db_imported.txt"),
    params:
        url_db.replace('sqlite:///', ''),
    resources: db=1
    shell:
        """
        rm -f {params[0]}
        gunzip -c {input[0]} |sqlite3 -csv -separator $'\t' {params[0]} '.import --skip 0 /dev/stdin colocimport'
        touch {output[0]}
        """


"""sqlite3 {params[0]} 'create table coloc (id INTEGER PRIMARY KEY AUTOINCREMENT, chrom INTEGER NOT NULL, pos INTEGER NOT NULL, rsid TEXT NOT NULL, ref TEXT NOT NULL, alt TEXT NOT NULL, egene TEXT NOT NULL, gwas_beta REAL NOT NULL, gwas_pval REAL NOT NULL, gwas_id TEXT NOT NULL, eqtl_beta REAL NOT NULL, eqtl_pval REAL NOT NULL, eqtl_id TEXT NOT NULL, "PP.H4.abf" REAL NOT NULL, nsnps INTEGER NOT NULL, "SNP.PP.H4" REAL NOT NULL, "PP.H3.abf" REAL NOT NULL, "PP.H2.abf" REAL NOT NULL, "PP.H1.abf" REAL NOT NULL, "PP.H0.abf" REAL NOT NULL, coloc_lead_pos INTEGER NOT NULL, coloc_lead_rsid TEXT NOT NULL, coloc_region TEXT NOT NULL);'
        sqlite3 {params[0]} 'INSERT INTO coloc("chrom", "pos", "rsid", "ref", "alt", "egene", "gwas_beta", "gwas_pval", "gwas_id", "eqtl_beta", "eqtl_pval", "eqtl_id", "PP.H4.abf", "SNP.PP.H4", "nsnps", "PP.H3.abf", "PP.H2.abf", "PP.H1.abf", "PP.H0.abf", "coloc_lead_pos", "coloc_lead_rsid", "coloc_region") SELECT * FROM coloctemp;'
        sqlite3 {params[0]} 'DROP TABLE coloctemp;'"""
